//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.01 at 06:03:54 PM EEST 
//


package oasis.names.tc.emergency.EDXL.TEP._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WeatherPrecipitationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="WeatherPrecipitationType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Drizzle"/>
 *     &lt;enumeration value="Ice Crystals"/>
 *     &lt;enumeration value="Unknown"/>
 *     &lt;enumeration value="Rain"/>
 *     &lt;enumeration value="Ice Pellets"/>
 *     &lt;enumeration value="Snow"/>
 *     &lt;enumeration value="Hail"/>
 *     &lt;enumeration value="Snow Grains"/>
 *     &lt;enumeration value="Snow Hail"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WeatherPrecipitationType", namespace = "urn:oasis:names:tc:emergency:edxl:ct:1.0")
@XmlEnum
public enum WeatherPrecipitationType {

    @XmlEnumValue("Drizzle")
    DRIZZLE("Drizzle"),
    @XmlEnumValue("Ice Crystals")
    ICE_CRYSTALS("Ice Crystals"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),
    @XmlEnumValue("Rain")
    RAIN("Rain"),
    @XmlEnumValue("Ice Pellets")
    ICE_PELLETS("Ice Pellets"),
    @XmlEnumValue("Snow")
    SNOW("Snow"),
    @XmlEnumValue("Hail")
    HAIL("Hail"),
    @XmlEnumValue("Snow Grains")
    SNOW_GRAINS("Snow Grains"),
    @XmlEnumValue("Snow Hail")
    SNOW_HAIL("Snow Hail");
    private final String value;

    WeatherPrecipitationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WeatherPrecipitationType fromValue(String v) {
        for (WeatherPrecipitationType c: WeatherPrecipitationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
