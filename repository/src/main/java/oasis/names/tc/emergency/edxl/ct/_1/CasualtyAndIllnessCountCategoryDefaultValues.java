//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.02.15 at 12:31:13 PM EET 
//


package oasis.names.tc.emergency.edxl.ct._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CasualtyAndIllnessCountCategoryDefaultValues.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CasualtyAndIllnessCountCategoryDefaultValues">
 *   &lt;restriction base="{urn:oasis:names:tc:emergency:edxl:ct:1.0}ValueType">
 *     &lt;enumeration value="Fatalities"/>
 *     &lt;enumeration value="Hospitalized"/>
 *     &lt;enumeration value="WithInjuryOrIllness"/>
 *     &lt;enumeration value="TrappedOrInNeedOfRescue"/>
 *     &lt;enumeration value="Missing"/>
 *     &lt;enumeration value="Evacuated"/>
 *     &lt;enumeration value="ShelteringInPlace"/>
 *     &lt;enumeration value="InTemporaryShelters"/>
 *     &lt;enumeration value="InQuarantine"/>
 *     &lt;enumeration value="ReceivedMassImmunizations"/>
 *     &lt;enumeration value="RequireMassImmunizations"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CasualtyAndIllnessCountCategoryDefaultValues")
@XmlEnum
public enum CasualtyAndIllnessCountCategoryDefaultValues {

    @XmlEnumValue("Fatalities")
    FATALITIES("Fatalities"),
    @XmlEnumValue("Hospitalized")
    HOSPITALIZED("Hospitalized"),
    @XmlEnumValue("WithInjuryOrIllness")
    WITH_INJURY_OR_ILLNESS("WithInjuryOrIllness"),
    @XmlEnumValue("TrappedOrInNeedOfRescue")
    TRAPPED_OR_IN_NEED_OF_RESCUE("TrappedOrInNeedOfRescue"),
    @XmlEnumValue("Missing")
    MISSING("Missing"),
    @XmlEnumValue("Evacuated")
    EVACUATED("Evacuated"),
    @XmlEnumValue("ShelteringInPlace")
    SHELTERING_IN_PLACE("ShelteringInPlace"),
    @XmlEnumValue("InTemporaryShelters")
    IN_TEMPORARY_SHELTERS("InTemporaryShelters"),
    @XmlEnumValue("InQuarantine")
    IN_QUARANTINE("InQuarantine"),
    @XmlEnumValue("ReceivedMassImmunizations")
    RECEIVED_MASS_IMMUNIZATIONS("ReceivedMassImmunizations"),
    @XmlEnumValue("RequireMassImmunizations")
    REQUIRE_MASS_IMMUNIZATIONS("RequireMassImmunizations");
    private final String value;

    CasualtyAndIllnessCountCategoryDefaultValues(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CasualtyAndIllnessCountCategoryDefaultValues fromValue(String v) {
        for (CasualtyAndIllnessCountCategoryDefaultValues c: CasualtyAndIllnessCountCategoryDefaultValues.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
