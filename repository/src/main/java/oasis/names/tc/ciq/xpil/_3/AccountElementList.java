//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.23 at 05:44:00 PM EET 
//


package oasis.names.tc.ciq.xpil._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AccountElementList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AccountElementList">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="AccountID"/>
 *     &lt;enumeration value="IssuingAuthority"/>
 *     &lt;enumeration value="AccountType"/>
 *     &lt;enumeration value="AccountBranch"/>
 *     &lt;enumeration value="IssuingCountryName"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AccountElementList")
@XmlEnum
public enum AccountElementList {


    /**
     * The unique name, number or mixed account identifier, e.g. bank account number
     * 
     */
    @XmlEnumValue("AccountID")
    ACCOUNT_ID("AccountID"),

    /**
     * The organisation that assigns and manages the account, e.g. a bank, power supplier, etc.
     * 
     */
    @XmlEnumValue("IssuingAuthority")
    ISSUING_AUTHORITY("IssuingAuthority"),

    /**
     * Commonly recognised names, such as IRD number (for NZ), SSN (for US), ABN (for AU), etc.
     * 
     */
    @XmlEnumValue("AccountType")
    ACCOUNT_TYPE("AccountType"),
    @XmlEnumValue("AccountBranch")
    ACCOUNT_BRANCH("AccountBranch"),

    /**
     * The country that issued the account
     * 
     */
    @XmlEnumValue("IssuingCountryName")
    ISSUING_COUNTRY_NAME("IssuingCountryName");
    private final String value;

    AccountElementList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AccountElementList fromValue(String v) {
        for (AccountElementList c: AccountElementList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
