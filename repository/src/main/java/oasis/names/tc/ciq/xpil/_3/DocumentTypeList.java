//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.23 at 05:44:00 PM EET 
//


package oasis.names.tc.ciq.xpil._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DocumentTypeList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DocumentTypeList">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="Passport"/>
 *     &lt;enumeration value="DriverLicense"/>
 *     &lt;enumeration value="CreditCard"/>
 *     &lt;enumeration value="BankCard"/>
 *     &lt;enumeration value="KeyCard"/>
 *     &lt;enumeration value="AccessCard"/>
 *     &lt;enumeration value="IdentificationCard"/>
 *     &lt;enumeration value="Certificate"/>
 *     &lt;enumeration value="MileageProgram"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DocumentTypeList")
@XmlEnum
public enum DocumentTypeList {

    @XmlEnumValue("Passport")
    PASSPORT("Passport"),
    @XmlEnumValue("DriverLicense")
    DRIVER_LICENSE("DriverLicense"),
    @XmlEnumValue("CreditCard")
    CREDIT_CARD("CreditCard"),
    @XmlEnumValue("BankCard")
    BANK_CARD("BankCard"),
    @XmlEnumValue("KeyCard")
    KEY_CARD("KeyCard"),
    @XmlEnumValue("AccessCard")
    ACCESS_CARD("AccessCard"),
    @XmlEnumValue("IdentificationCard")
    IDENTIFICATION_CARD("IdentificationCard"),
    @XmlEnumValue("Certificate")
    CERTIFICATE("Certificate"),
    @XmlEnumValue("MileageProgram")
    MILEAGE_PROGRAM("MileageProgram");
    private final String value;

    DocumentTypeList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DocumentTypeList fromValue(String v) {
        for (DocumentTypeList c: DocumentTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
